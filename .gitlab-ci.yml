variables:
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE_TAG: shopware/development
    GITHUB_IMAGE_TAG: ghcr.io/shopware/development
    MAIN_PHP_VERSION: "7.4"

stages:
    - analyze
    - unit
    - build

cache:
    key: "Eternal static key"
    paths:
        - .composer
        - .npm

default:
    image: shopware/development:7.4-composer-2
    tags:
        - t3.medium
    before_script:
        - composer install --ignore-platform-reqs --no-interaction --optimize-autoloader --no-suggest --no-scripts --no-progress
        - composer install --ignore-platform-reqs --no-interaction --optimize-autoloader --no-suggest --no-progress --working-dir=dev-ops/analyze

Static Analysis:
    image: shopware/development:7.4-composer-2
    stage: analyze
    only:
        refs:
            - merge_requests
            - trunk
    script:
        - dev-ops/analyze/vendor/bin/ecs check --config easy-coding-standard.php
        - dev-ops/analyze/vendor/bin/phpstan analyze

Unit:
    image: shopware/development:7.4-composer-2
    stage: unit
    only:
        refs:
            - merge_requests
            - trunk
    script:
        - vendor/bin/phpunit
            --configuration dev-ops/analyze
            --log-junit build/artifacts/phpunit.junit.xml
            --colors=never
    artifacts:
        reports:
            junit: build/artifacts/phpunit.junit.xml

Build:
    image: docker:18.09.7
    stage: build
    only:
        refs:
            - trunk
    services:
        - name: docker:18.09.7-dind
          alias: docker
    parallel:
        matrix:
            - PHP_VERSION: [ "7.4", "8.0", "8.1" ]
    before_script:
        - docker login -u $CI_REGISTRY_USER -p "$CI_REGISTRY_PASSWORD"
    script:
        - docker build -t app-base -t $IMAGE_TAG:${PHP_VERSION}-composer-2 --build-arg IMAGE_PHP_VERSION=${PHP_VERSION} dev-ops/docker/containers/app
        - docker build -t $IMAGE_TAG:${PHP_VERSION} -t $IMAGE_TAG:${PHP_VERSION}-composer-1 --build-arg IMAGE_PHP_VERSION=${PHP_VERSION} dev-ops/docker/containers/app-composer-1
        - docker rmi app-base
        - docker push $IMAGE_TAG:${PHP_VERSION}
        - docker push $IMAGE_TAG:${PHP_VERSION}-composer-1
        - docker push $IMAGE_TAG:${PHP_VERSION}-composer-2
        - echo "$GITHUB_TOKEN" | docker login ghcr.io -u $GITHUB_USER --password-stdin
        - docker tag $IMAGE_TAG:${PHP_VERSION} $GITHUB_IMAGE_TAG:${PHP_VERSION}
        - docker push $GITHUB_IMAGE_TAG:${PHP_VERSION}
        - docker tag $IMAGE_TAG:${PHP_VERSION}-composer-1 $GITHUB_IMAGE_TAG:${PHP_VERSION}-composer-1
        - docker push $GITHUB_IMAGE_TAG:${PHP_VERSION}-composer-1
        - docker tag $IMAGE_TAG:${PHP_VERSION}-composer-2 $GITHUB_IMAGE_TAG:${PHP_VERSION}-composer-2
        - docker push $GITHUB_IMAGE_TAG:${PHP_VERSION}-composer-2
    after_script:
        - >
            if [[ $PHP_VERSION = $MAIN_PHP_VERSION ]]; then
                docker tag $IMAGE_TAG:${PHP_VERSION} $IMAGE_TAG:latest
                docker push $IMAGE_TAG:latest
            fi
